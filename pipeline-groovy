def loadProperties() {
    properties = readProperties file: 'pom_xml.properties'
}	

def toSmallCase(String str) {
if (str.length() > 0) {
    return str.toLowerCase()
	}
	return ""
}
pipeline {
    agent any
     tools {
   jdk 'jdk8'
   maven 'maven3'
     }
        stages {
          stage('SCM Checkout'){
            steps {
                git branch: 'master', credentialsId: 'github-login', poll: false, url: 'https://github.com/Shashankmishra1989/hello-world.git'            
                
            }
        }
		stage('Read Module in POM'){
            steps {
                script {
                  sh label: '', script: "sudo groovy /opt/scripts/pom_parser.groovy pom.xml"
                  loadProperties() 				  
               } 
            }
        }
        stage ('Compile Stage') {
            steps {
                sh 'mvn clean compile'
                echo 'Build Compile Successful'
                }
            }
         stage ('MVN-Build') {
            steps {
                sh 'mvn install'
                echo 'This is a minimal pipeline.'
            }
            }
         stage ('Build Docker image') {
	   environment {
	      versionName = "${properties.version}".toLowerCase()
	      }
             steps {
                 sh 'pwd'
                 sh 'sudo docker build -f /var/jenkins_home/workspace/Pipeline_test/Dockerfile -t rojha63/my-app:${versionName} .'
                echo 'Docker image build.'
            }
         }
         stage ('Push Docker image to HUB') {
	  environment {
	      versionName = "${properties.version}".toLowerCase()
	      }
              steps {  
                 withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerpwd')]) {
                    sh "sudo docker login -u rojha63 -p ${dockerpwd}"
                 }   
                echo ${versionName}
		sh 'sudo docker push rojha63/my-app:${versionName}'
                echo 'Docker image build.'
           }
           }
           }
           }
